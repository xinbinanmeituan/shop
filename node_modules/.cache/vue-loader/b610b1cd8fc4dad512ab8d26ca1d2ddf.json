{"remainingRequest":"/Users/xba/Downloads/qianduan/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xba/Downloads/qianduan/src/views/login/index.vue?vue&type=style&index=0&id=37dfd6fc&lang=css","dependencies":[{"path":"/Users/xba/Downloads/qianduan/src/views/login/index.vue","mtime":1714052332465},{"path":"/Users/xba/Downloads/qianduan/node_modules/css-loader/dist/cjs.js","mtime":1714047949179},{"path":"/Users/xba/Downloads/qianduan/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1714047955427},{"path":"/Users/xba/Downloads/qianduan/node_modules/postcss-loader/src/index.js","mtime":1714047951123},{"path":"/Users/xba/Downloads/qianduan/node_modules/cache-loader/dist/cjs.js","mtime":1714047946112},{"path":"/Users/xba/Downloads/qianduan/node_modules/vue-loader/lib/index.js","mtime":1714047952171}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sb2dpbi1tb2R1bGUgewogIHdpZHRoOiA0ODBweDsKICAvKmhlaWdodDogMzI1cHg7Ki8KICBtYXJnaW4tdG9wOiA2MHB4OwogIGJvcmRlcjogbm9uZTsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IDUwMHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICB3aWR0aDogMzAlOwp9Ci5lbC1oZWFkZXIgewogIGJhY2tncm91bmQtY29sb3I6ICMzN2JiNTY7CiAgY29sb3I6ICMzMzM7CiAgbGluZS1oZWlnaHQ6IDYwcHg7Cn0KLmRpYWxvZyB7ICAKICAgIHBvc2l0aW9uOiBmaXhlZDsgIAogICAgdG9wOiA1MCU7ICAKICAgIGxlZnQ6IDUwJTsgIAogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7ICAKICAgIGJhY2tncm91bmQtY29sb3I6ICM5MEVFOTA7ICAKICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7ICAKICAgIHBhZGRpbmc6IDIwcHg7ICAKICAgIHotaW5kZXg6IDEwMDA7ICAKICAgIC8qIOWFtuS7lumAmueUqOagt+W8jyAqLyAgCiAgfSAgCiAgICAKICAuZGlhbG9nLWNvbnRlbnQgeyAgCiAgICAvKiDlr7nor53moYblhoXlrrnmoLflvI8gKi8gIAogIH0gIAo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA6MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n  <div>\n    <el-container>\n      <el-header >\n        <div style=\"text-align: center; font-size: 25px; font-weight: bolder\">\n          <i class=\"el-icon-s-home\" style=\"margin-right: 25px\"></i>\n          网络流量分析系统\n        </div>\n      </el-header>\n      <el-main>\n        <el-card class=\"login-module\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span style=\"text-align: center; font-size: 20px; font-family: 'Microsoft YaHei'\">\n              <p><i class=\"el-icon-office-building\" style=\"margin-right: 18px\"></i>登录</p>\n            </span>\n          </div>\n          <div>\n            <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"90px\" class=\"demo-ruleForm\">\n              <el-form-item label=\"用户名\" prop=\"id\">\n                <el-input v-model.number=\"ruleForm.id\" prefix-icon=\"el-icon-lollipop\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"用户密码\" prop=\"password\">\n                <el-input v-model=\"ruleForm.password\" placeholder=\"请输入密码\" show-password prefix-icon=\"el-icon-ice-cream-round\"></el-input>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">登录</el-button>\n                <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n                <el-button type=\"primary\"   @click=\"showDialog = true\">注册</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-card>\n      </el-main>\n    </el-container>\n    <div v-if=\"showDialog\"   class=\"dialog\" :style=\"dialogStyle\"> \n      <h4>用户注册</h4> \n      <div class=\"dialog-content\" >  \n      <el-form style=\"width: 70%\" :model=\"ruleForm1\" :rules=\"rules\" ref=\"ruleForm1\" label-width=\"100px\" class=\"demo-ruleForm\">\n        <el-form-item label=\"账号\" prop=\"taccount\">\n        <el-input   style=\"width: 350px; height: 40px; line-height: 40px;\"  placeholder=\"只能输入字母、数字和特殊字符，不能输入中文\"  v-model=\"ruleForm1.taccount\" ></el-input>\n      </el-form-item>\n      <el-form-item label=\"姓名\" prop=\"tname\">  \n      <el-input   style=\"width: 350px; height: 40px; line-height: 40px;\" v-model=\"ruleForm1.tname\" ></el-input>\n      </el-form-item> \n      <el-form-item label=\"网卡\" prop=\"card\">  \n      <select id=\"mySelect\" style=\"width: 350px; height: 40px; line-height: 40px;\"  v-model=\"ruleForm1.card\">  \n      <option value=\"en0\">en0</option>  \n      <option value=\"en1\">en1</option> \n      <option value=\"en2\">en2</option> \n      </select>\n      </el-form-item> \n      <el-form-item label=\"密码\" prop=\"password\">  \n      <el-input   style=\"width: 350px; height: 40px; line-height: 40px;\"   type=\"password\"  v-model=\"ruleForm1.password\" ></el-input>\n      </el-form-item> \n      <el-form-item label=\"确认密码\" prop=\"confirmpasswd\">  \n      <el-input   style=\"width: 350px; height: 40px; line-height: 40px;\"  type=\"password\"  v-model=\"ruleForm1.confirmpasswd\" ></el-input>\n      </el-form-item> \n       <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm1('ruleForm1')\">提交</el-button>\n        <el-button type=\"primary\" @click=\"resetForm('ruleForm1')\">重置</el-button>\n        <el-button  type=\"primary\" @click=\"showDialog = false\">关闭</el-button> \n       </el-form-item>\n      </el-form>  \n       \n      </div>  \n    </div>  \n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      ruleForm: {\n        id: null,\n        password: null,\n        type: null,\n      },\n      ruleForm1: {\n        tname: null,\n        role: null,\n        card: null,\n        taccount: null,\n        password: null,\n        confirmpasswd: null,\n      },\n      rules: {\n        id: [\n          { required: true, message: '请输入用户 id', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ],\n        type: [\n          { required: true, message: '请选择', trigger: 'change' }\n        ],\n      },\n      showDialog: false,  \n      dialogStyle: {  \n          width: '480px', // 设置对话框宽度  \n          height: '560px', // 设置对话框高度  \n        }  \n    };\n  },\n  methods: {\n    submitForm(formName) {\n      const that = this\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          let check = false\n          let name = null\n\n         //if (that.ruleForm.id=== 'admin') {\n          let form = {taccount: that.ruleForm.id, password: that.ruleForm.password}\n          console.log(form)\n          axios.post(\"http://localhost:10086/teacher/login\", form).then(function (resp) {\n          //console.log(\"教师登陆验证信息：\" + resp.data)\n          check = resp.data\n          if (check === true) {\n                axios.get(\"http://localhost:10086/teacher/findById/\" + that.ruleForm.id).then(function (resp) {\n                  //console.log(\"登陆页正在获取用户信息\" + resp.data)\n                 let name = resp.data.tname\n                 let role = resp.data.role\n                 // console.log('1111111111111',role)\n                  sessionStorage.setItem(\"token\", 'true')\n                  sessionStorage.setItem(\"type\", role)\n                  sessionStorage.setItem(\"name\", name)\n                  sessionStorage.setItem(\"tid\", resp.data.tid)\n                  sessionStorage.setItem(\"taccount\", resp.data.taccount)\n                  if (role === \"user\")\n                    {\n                      sessionStorage.setItem(\"card\", resp.data.card)\n                    }\n                 \n\n                  that.$message({\n                      showClose: true,\n                      message: '登陆成功，欢迎 ' + name + '!',\n                      type: 'success'\n                    });\n                    //that.$router.push('/admin')\n                    // 3. 路由跳转\n                  that.$router.push({\n                    path: '/' + resp.data.role,\n                    query: {}\n                  })\n                  });\n                }\n           else {\n                that.$message({\n                  showClose: true,\n                  message: '登陆失败，检查账号密码',\n                  type: 'error'\n                });\n              }\n            });\n    \n        } else {\n          //console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    submitForm1(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          // 通过前端校验\n          const that = this\n          if (this.ruleForm1.password !== this.ruleForm1.confirmpasswd) {  \n            that.$message.error('密码不匹配，请重新输入！');\n            return;  \n          } \n        const containsChinese = /[\\u4e00-\\u9fff]/.test(this.ruleForm1.taccount);\n        if (containsChinese) {  \n         this.$message.error('账号只能输入字母、数字和特殊字符，不能输入中文！');  \n        return;\n        }  \n          this.ruleForm1.role='user'\n          axios.post(\"http://localhost:10086/teacher/addTeacher\", this.ruleForm1).then(function (resp) {\n            if (resp.data === true) {\n              that.$message({\n                showClose: true,\n                message: '插入成功',\n                type: 'success'\n              });\n            that.showDialog=false;\n            window.location.reload();\n            }\n            else {\n              that.$message.error('插入失败，请检查数据库t');\n            }\n          })\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n  \n}\n</script>\n\n<style>\n.login-module {\n  width: 480px;\n  /*height: 325px;*/\n  margin-top: 60px;\n  border: none;\n  position: absolute;\n  right: 500px;\n  text-align: center;\n  width: 30%;\n}\n.el-header {\n  background-color: #37bb56;\n  color: #333;\n  line-height: 60px;\n}\n.dialog {  \n    position: fixed;  \n    top: 50%;  \n    left: 50%;  \n    transform: translate(-50%, -50%);  \n    background-color: #90EE90;  \n    border: 1px solid #ccc;  \n    padding: 20px;  \n    z-index: 1000;  \n    /* 其他通用样式 */  \n  }  \n    \n  .dialog-content {  \n    /* 对话框内容样式 */  \n  }  \n</style>"]}]}