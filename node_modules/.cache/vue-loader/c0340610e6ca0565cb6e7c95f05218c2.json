{"remainingRequest":"/Users/xba/Downloads/qianduan/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xba/Downloads/qianduan/src/views/lanhu_dianpu/index.vue?vue&type=template&id=0b17430d&scoped=true","dependencies":[{"path":"/Users/xba/Downloads/qianduan/src/views/lanhu_dianpu/index.vue","mtime":1713938484000},{"path":"/Users/xba/Downloads/qianduan/node_modules/cache-loader/dist/cjs.js","mtime":1714047946112},{"path":"/Users/xba/Downloads/qianduan/node_modules/cache-loader/dist/cjs.js","mtime":1714047946112},{"path":"/Users/xba/Downloads/qianduan/node_modules/babel-loader/lib/index.js","mtime":1714047951189},{"path":"/Users/xba/Downloads/qianduan/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1714047955738},{"path":"/Users/xba/Downloads/qianduan/node_modules/cache-loader/dist/cjs.js","mtime":1714047946112},{"path":"/Users/xba/Downloads/qianduan/node_modules/vue-loader/lib/index.js","mtime":1714047952171}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}